{"version":3,"file":"static/js/454.916ab225.chunk.js","mappings":"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","sources":["webpack://react-social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthNavigate.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__6zxZw\",\"namesBlock\":\"Dialogs_namesBlock__5+rgm\",\"messageBlock\":\"Dialogs_messageBlock__fEaz2\",\"dialogsItems\":\"Dialogs_dialogsItems__IYdCB\",\"dialog\":\"Dialogs_dialog__4+u+F\",\"dialogIsActive\":\"Dialogs_dialogIsActive__Ps+4s\",\"messages\":\"Dialogs_messages__ris3m\",\"message\":\"Dialogs_message__vcKvh\",\"messageItem\":\"Dialogs_messageItem__48KTX\",\"textarea\":\"Dialogs_textarea__bV3RE\"};","import React from 'react';\r\nimport styles from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <li className={styles.dialog}>\r\n      <NavLink\r\n        to={'/dialogs/' + props.id}\r\n        className={(navData) =>\r\n          navData.isActive ? styles.dialogIsActive : styles.dialog\r\n        }\r\n      >\r\n        {props.name}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport styles from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <li className={styles.message}>\r\n      <div className={styles.messageItem}>\r\n        <span>{props.message}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst Dialogs = (props) => {\r\n  const state = props.dialogsPage;\r\n\r\n  const dialogsElements = state.dialogs.map((dialog) => (\r\n    <DialogItem key={dialog.id} id={dialog.id} name={dialog.name} />\r\n  ));\r\n\r\n  const messagesElements = state.messages.map((message) => (\r\n    <Message key={message.id} message={message.message} />\r\n  ));\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.namesBlock}>\r\n        <ul className={styles.dialogsItems}>{dialogsElements}</ul>\r\n      </div>\r\n      <div className={styles.messageBlock}>\r\n        <ul className={styles.messages}>{messagesElements}</ul>\r\n        <AddMessageForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        className={styles.textarea}\r\n        component=\"textarea\"\r\n        name=\"newMessageBody\"\r\n        placeholder=\"Enter your message\"\r\n      />\r\n\r\n      <button>Add message</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddMessageForm = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","// withAuthNavigate.js\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst mapStateToPropsForNavigate = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n  class NavigateComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  const ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(\r\n    NavigateComponent\r\n  );\r\n\r\n  return ConnectedAuthNavigateComponent;\r\n};\r\n","import { sendMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageActionCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthNavigate\r\n)(Dialogs);\r\n"],"names":["props","_jsx","className","styles","children","NavLink","to","id","navData","isActive","name","message","AddMessageForm","_jsxs","onSubmit","handleSubmit","Field","component","placeholder","reduxForm","form","state","dialogsPage","dialogsElements","dialogs","map","dialog","DialogItem","messagesElements","messages","Message","values","sendMessage","newMessageBody","mapStateToPropsForNavigate","isAuth","auth","compose","connect","dispatch","sendMessageActionCreator","Component","NavigateComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","Navigate","React","Dialogs"],"sourceRoot":""}